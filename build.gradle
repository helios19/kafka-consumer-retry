buildscript {
	ext {
		kotlinVersion = '1.2.51'
//		springBootVersion = '2.0.0.M7'
        springBootVersion = '2.0.0.RELEASE'
        springKafkaVersion = '1.3.5.RELEASE'
		gradleDocker = '0.13.0'
        micrometerVersion = ''
		kotlinxVersion = '0.22.5'
	}
	repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
		mavenCentral()
		maven { url "http://packages.confluent.io/maven/" }
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "https://packages.confluent.io/maven/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:${gradleDocker}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.ing.kafka.consumer.retry'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
//    compile.exclude module: 'spring-boot-starter-tomcat'
    compile.exclude module : 'spring-boot-starter-logging'
    all*.exclude group: 'ch.qos.logback', module: 'logback-core'
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

bootJar {
	enabled = false
	baseName = 'kafka-consumer-retry'
	version =  '0.0.1-SNAPSHOT'
}

compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
	maven { url "http://packages.confluent.io/maven" }
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
//    maven { url 'https://repo.spring.io/libs-milestone' }
//    maven { url 'https://repo.spring.io/libs-snapshot' }

}




repositories {
	// 5
	jcenter()
}

// 6
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'

dependencyManagement {
	imports {
		// 7
		mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
	}
}



dependencies {
	compile 'org.springframework.boot:spring-boot'
	compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
	compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
	compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinxVersion}"
	// Kafka
	compile "org.springframework.kafka:spring-kafka:${springKafkaVersion}"
	compile 'org.apache.kafka:kafka-clients:2.0.0'
	compile 'io.confluent:kafka-avro-serializer:5.0.0'


    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'
//    compile "org.apache.logging.log4j:log4j-api-kotlin:1.0"
	compile 'org.apache.logging.log4j:log4j-api:2.8.2'
	compile 'org.apache.logging.log4j:log4j-core:2.8.2'


    // Spring Boot Actuator
    compile ("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}") {
        exclude group: 'io.micrometer', module: 'micrometer-core'
    }

    // Micrometer
    compile "io.micrometer:micrometer-core:$micrometerVersion"
    ['prometheus', 'jmx', 'statsd'].each { sys ->
        compile "io.micrometer:micrometer-registry-$sys:$micrometerVersion"
    }

    // JSON serialization
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.6'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.6'



//	// apache logger.
//	compile "org.apache.logging.log4j:log4j-api:2.3"
//	compile "org.apache.logging.log4j:log4j-core:2.3"
//
//	// apache logger adapters.
//	compile "org.apache.logging.log4j:log4j-slf4j-impl:2.3"


	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.kafka:spring-kafka-test')
}
